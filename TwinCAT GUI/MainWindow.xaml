<Window x:Class="TwinCAT_GUI.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:iconPacks="http://metro.mahapps.com/winfx/xaml/iconpacks"
        xmlns:i="http://schemas.microsoft.com/expression/2010/interactivity"
        xmlns:local="clr-namespace:TwinCAT_GUI"
        mc:Ignorable="d"
        Title="TwinCAT ADS GUI" Height="500" Width="800"
    xmlns:theme="clr-namespace:Microsoft.Windows.Themes;assembly=PresentationFramework.Aero2">
    <Window.Resources>
        <SolidColorBrush x:Key="ToolBarButtonHover" Color="#210080FF"/>
        <SolidColorBrush x:Key="ToolBarMenuBorder" Color="#FFB6BDC5"/>
        <SolidColorBrush x:Key="ToolBarSubMenuBackground" Color="#FFEEF5FD"/>
        <SolidColorBrush x:Key="ToolBarHorizontalBackground" Color="#FFEEF5FD"/>
        <SolidColorBrush x:Key="ToolBarVerticalBackground" Color="#FFEEF5FD"/>
        <SolidColorBrush x:Key="ToolBarGripper" Color="#FF6D6D6D"/>
        <SolidColorBrush x:Key="ToolBarToggleButtonHorizontalBackground" Color="#FFEEF5FD"/>
        <SolidColorBrush x:Key="ToolBarToggleButtonVerticalBackground" Color="#FFEEF5FD"/>
        <Image x:Key="TcConfig" x:Shared="false" Source="Resources\TcSysUI_Config.ico"/>
        <Image x:Key="TcStart" x:Shared="false" Source="Resources\TcSysUI_Start.ico"/>
        <Image x:Key="TcGrey" x:Shared="false" Source="Resources\TcSysUI_Grey.ico"/>
        <Image x:Key="TcError" x:Shared="false" Source="Resources\TcSysUI_Red.ico"/>
        <Image x:Key="TcStarting" x:Shared="false" Source="Resources\TcSysUI_Starting.ico"/>
        <Image x:Key="TcConfiging" x:Shared="false" Source="Resources\TcSysUI_Configing.ico"/>
        <Style x:Key="ToolBarMainPanelBorderStyle" TargetType="{x:Type Border}">
            <Setter Property="Margin" Value="0,0,11,0"/>
            <Setter Property="CornerRadius" Value="3,3,3,3"/>
            <Style.Triggers>
                <DataTrigger Binding="{Binding Source={x:Static SystemParameters.HighContrast}}" Value="true">
                    <Setter Property="CornerRadius" Value="0,0,0,0"/>
                </DataTrigger>
            </Style.Triggers>
        </Style>
        <Style x:Key="ToolBarThumbStyle" TargetType="{x:Type Thumb}">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Thumb}">
                        <Border Background="Transparent" Padding="{TemplateBinding Padding}" SnapsToDevicePixels="True">
                            <Rectangle>
                                <Rectangle.Fill>
                                    <DrawingBrush TileMode="Tile" ViewboxUnits="Absolute" Viewbox="0,0,4,4" Viewport="0,0,4,4" ViewportUnits="Absolute">
                                        <DrawingBrush.Drawing>
                                            <DrawingGroup>
                                                <GeometryDrawing Brush="White" Geometry="M 1 1 L 1 3 L 3 3 L 3 1 z"/>
                                                <GeometryDrawing Brush="{StaticResource ToolBarGripper}" Geometry="M 0 0 L 0 2 L 2 2 L 2 0 z"/>
                                            </DrawingGroup>
                                        </DrawingBrush.Drawing>
                                    </DrawingBrush>
                                </Rectangle.Fill>
                            </Rectangle>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="true">
                                <Setter Property="Cursor" Value="SizeAll"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="ToolBarHorizontalOverflowButtonStyle" TargetType="{x:Type ToggleButton}">
            <Setter Property="Background" Value="{StaticResource ToolBarToggleButtonHorizontalBackground}"/>
            <Setter Property="MinHeight" Value="0"/>
            <Setter Property="MinWidth" Value="0"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ToggleButton}">
                        <Border x:Name="Bd" Background="{TemplateBinding Background}" CornerRadius="0,3,3,0" SnapsToDevicePixels="true">
                            <Canvas HorizontalAlignment="Right" Height="7" Margin="7,2,2,2" SnapsToDevicePixels="true" VerticalAlignment="Bottom" Width="6">
                                <Path Data="M 1 1.5 L 6 1.5" Stroke="White"/>
                                <Path Data="M 0 0.5 L 5 0.5" Stroke="{TemplateBinding Foreground}"/>
                                <Path Data="M 0.5 4 L 6.5 4 L 3.5 7 Z" Fill="White"/>
                                <Path Data="M -0.5 3 L 5.5 3 L 2.5 6 Z" Fill="{TemplateBinding Foreground}"/>
                            </Canvas>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="true">
                                <Setter Property="Background" TargetName="Bd" Value="{StaticResource ToolBarButtonHover}"/>
                            </Trigger>
                            <Trigger Property="IsKeyboardFocused" Value="true">
                                <Setter Property="Background" TargetName="Bd" Value="{StaticResource ToolBarButtonHover}"/>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Foreground" Value="{StaticResource ToolBarGripper}"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Style.Triggers>
                <DataTrigger Binding="{Binding Source={x:Static SystemParameters.HighContrast}}" Value="true">
                    <Setter Property="Background" Value="{DynamicResource {x:Static SystemColors.ControlBrushKey}}"/>
                </DataTrigger>
            </Style.Triggers>
        </Style>
        <Style x:Key="ToolBarVerticalOverflowButtonStyle" TargetType="{x:Type ToggleButton}">
            <Setter Property="Background" Value="{StaticResource ToolBarToggleButtonVerticalBackground}"/>
            <Setter Property="MinHeight" Value="0"/>
            <Setter Property="MinWidth" Value="0"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ToggleButton}">
                        <Border x:Name="Bd" Background="{TemplateBinding Background}" CornerRadius="0,0,3,3" SnapsToDevicePixels="true">
                            <Canvas HorizontalAlignment="Right" Height="6" Margin="2,7,2,2" SnapsToDevicePixels="true" VerticalAlignment="Bottom" Width="7">
                                <Path Data="M 1.5 1 L 1.5 6" Stroke="White"/>
                                <Path Data="M 0.5 0 L 0.5 5" Stroke="{TemplateBinding Foreground}"/>
                                <Path Data="M 3.5 0.5 L 7 3.5 L 4 6.5 Z" Fill="White"/>
                                <Path Data="M 3 -0.5 L 6 2.5 L 3 5.5 Z" Fill="{TemplateBinding Foreground}"/>
                            </Canvas>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="true">
                                <Setter Property="Background" TargetName="Bd" Value="{StaticResource ToolBarButtonHover}"/>
                            </Trigger>
                            <Trigger Property="IsKeyboardFocused" Value="true">
                                <Setter Property="Background" TargetName="Bd" Value="{StaticResource ToolBarButtonHover}"/>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Foreground" Value="{StaticResource ToolBarGripper}"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Style.Triggers>
                <DataTrigger Binding="{Binding Source={x:Static SystemParameters.HighContrast}}" Value="true">
                    <Setter Property="Background" Value="{DynamicResource {x:Static SystemColors.ControlBrushKey}}"/>
                </DataTrigger>
            </Style.Triggers>
        </Style>
        <Style TargetType="{x:Type ToolBar}">
            <Setter Property="Background" Value="{StaticResource ToolBarHorizontalBackground}"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ToolBar}">
                        <Grid x:Name="Grid" Margin="3,1,1,1" SnapsToDevicePixels="true">
                            <Grid x:Name="OverflowGrid" HorizontalAlignment="Right">
                                <Popup x:Name="OverflowPopup" AllowsTransparency="true" Focusable="false" IsOpen="{Binding IsOverflowOpen, RelativeSource={RelativeSource TemplatedParent}}" Placement="Bottom" PopupAnimation="{DynamicResource {x:Static SystemParameters.ComboBoxPopupAnimationKey}}" StaysOpen="false">
                                    <theme:SystemDropShadowChrome x:Name="Shdw" Color="Transparent">
                                        <Border x:Name="ToolBarSubMenuBorder" Background="{StaticResource ToolBarSubMenuBackground}" BorderThickness="1" BorderBrush="{StaticResource ToolBarMenuBorder}" RenderOptions.ClearTypeHint="Enabled">
                                            <ToolBarOverflowPanel x:Name="PART_ToolBarOverflowPanel" KeyboardNavigation.DirectionalNavigation="Cycle" Focusable="true" FocusVisualStyle="{x:Null}" Margin="2" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" KeyboardNavigation.TabNavigation="Cycle" WrapWidth="200"/>
                                        </Border>
                                    </theme:SystemDropShadowChrome>
                                </Popup>
                            </Grid>
                            <Border x:Name="MainPanelBorder" Background="{TemplateBinding Background}" BorderThickness="{TemplateBinding BorderThickness}" BorderBrush="{TemplateBinding BorderBrush}" Padding="{TemplateBinding Padding}" Style="{StaticResource ToolBarMainPanelBorderStyle}">
                                <DockPanel KeyboardNavigation.TabNavigation="Local" KeyboardNavigation.TabIndex="1">
                                    <ContentPresenter x:Name="ToolBarHeader" ContentSource="Header" HorizontalAlignment="Center" Margin="4,0,4,0" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="Center"/>
                                    <ToolBarPanel x:Name="PART_ToolBarPanel" IsItemsHost="true" Margin="0,1,2,2" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                                </DockPanel>
                            </Border>
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsOverflowOpen" Value="true"/>
                            <Trigger Property="Header" Value="{x:Null}">
                                <Setter Property="Visibility" TargetName="ToolBarHeader" Value="Collapsed"/>
                            </Trigger>
                            <Trigger Property="ToolBarTray.IsLocked" Value="true"/>
                            <Trigger Property="HasDropShadow" SourceName="OverflowPopup" Value="true">
                                <Setter Property="Margin" TargetName="Shdw" Value="0,0,5,5"/>
                                <Setter Property="SnapsToDevicePixels" TargetName="Shdw" Value="true"/>
                                <Setter Property="Color" TargetName="Shdw" Value="#71000000"/>
                            </Trigger>
                            <Trigger Property="Orientation" Value="Vertical">
                                <Setter Property="Margin" TargetName="Grid" Value="1,3,1,1"/>
                                <Setter Property="Margin" TargetName="ToolBarHeader" Value="0,0,0,4"/>
                                <Setter Property="Margin" TargetName="PART_ToolBarPanel" Value="1,0,2,2"/>
                                <Setter Property="DockPanel.Dock" TargetName="ToolBarHeader" Value="Top"/>
                                <Setter Property="HorizontalAlignment" TargetName="OverflowGrid" Value="Stretch"/>
                                <Setter Property="VerticalAlignment" TargetName="OverflowGrid" Value="Bottom"/>
                                <Setter Property="Placement" TargetName="OverflowPopup" Value="Right"/>
                                <Setter Property="Margin" TargetName="MainPanelBorder" Value="0,0,0,11"/>
                                <Setter Property="Background" Value="{StaticResource ToolBarVerticalBackground}"/>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Style.Triggers>
                <DataTrigger Binding="{Binding Source={x:Static SystemParameters.HighContrast}}" Value="true">
                    <Setter Property="Background" Value="{DynamicResource {x:Static SystemColors.ControlBrushKey}}"/>
                </DataTrigger>
            </Style.Triggers>
        </Style>


    </Window.Resources>
    <Grid>
        <DockPanel  LastChildFill="true" Grid.ColumnSpan="4" >
            <Menu DockPanel.Dock="Top" BorderBrush="#FFD5DFE5" BorderThickness="0,0,0,1">
                <MenuItem Header="_Menu">
                    <Separator />
                    <MenuItem Header="_Exit" />
                </MenuItem>
            </Menu>
            <ToolBarTray DockPanel.Dock="Top" Background="#FFF0F0F0">
                <ToolBar Background="#FFF0F0F0">
                    <TextBlock Text="Target: " VerticalAlignment="Center"></TextBlock>

                    <Button x:Name="btnToolBarConnect" Content="Connect" Click="btnToolBarConnect_Click" />
                    <Button x:Name="btnToolbarDisconnect" Content="Disconnect" Click="btnToolbarDisconnect_Click" />
                </ToolBar>
                
                <ToolBar x:Name="TbPLC" Height="30" Background="#FFF0F0F0" IsHitTestVisible="True" OverflowMode="AsNeeded" HorizontalContentAlignment="Left">
                    <TextBlock Text="PLC: " VerticalAlignment="Center"></TextBlock>
                    <Button x:Name="btnToolbarPLCStart" Content ="{iconPacks:MaterialDesign Kind=PlayArrow}" ToolTip="Re/Start TwinCAT System" Click="btnToolbarTcStart_Click" IsEnabled="False" Background="Transparent" Foreground="#FF10CB29"/>
                    <Button x:Name="btnToolbarPLCStop" Content ="{iconPacks:MaterialDesign Kind=Stop}" ToolTip="Set Config Mode" IsEnabled="False" Click="btnToolbarTcConfig_Click" Foreground="#FFE00D0D"/>
                    
                </ToolBar>
                <ToolBar x:Name="TbService">
                    <TextBlock Text="Service: " VerticalAlignment="Center"></TextBlock>
                    <Button x:Name="btnToolbarTcStart" Content ="{StaticResource TcGrey}" ToolTip="Re/Start TwinCAT System" Click="btnToolbarTcStart_Click" IsEnabled="False"/>
                    <Button x:Name="btnToolbarTcConfig" Content ="{StaticResource TcGrey}" ToolTip="Set Config Mode" IsEnabled="False" Click="btnToolbarTcConfig_Click"/>
                </ToolBar>

       


            </ToolBarTray>
            <StatusBar DockPanel.Dock="Bottom">
                <StatusBar.ItemsPanel>
                    <ItemsPanelTemplate>
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="Auto" />
                                <ColumnDefinition Width="Auto" />
                                <ColumnDefinition Width="*" />
                                <ColumnDefinition Width="Auto" />
                                <ColumnDefinition Width="100" />
                            </Grid.ColumnDefinitions>
                        </Grid>
                    </ItemsPanelTemplate>
                </StatusBar.ItemsPanel>
                <StatusBarItem>
                    <TextBlock Text="Local AMS: Not Found" />
                </StatusBarItem>
                <Separator Grid.Column="1" />
                <StatusBarItem Grid.Column="2">
                    <TextBlock Text="Target AMS: Not Found" />
                </StatusBarItem>
                <Separator Grid.Column="3" />
            </StatusBar>
            <TabControl Background="#FFF0F0F0" BorderThickness="0,1,0,0">
                <TabControl.Resources>
                    <Style TargetType="{x:Type Grid}">
                        <Setter Property="Background" Value="#FFF0F0F0"/>
                    </Style>
                </TabControl.Resources>
                <TabItem Header="Symbols">
                    <Grid Background="#FFF0F0F0" ShowGridLines="False">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="*"/>
                            <ColumnDefinition Width="*"/>
                            <ColumnDefinition Width="*"/>
                            <ColumnDefinition Width="*"/>
                            <ColumnDefinition Width="*"/>
                            <ColumnDefinition Width="*"/>
                            <ColumnDefinition Width="*"/>
                            <ColumnDefinition Width="*"/>
                            <ColumnDefinition Width="*"/>
                            <ColumnDefinition Width="*"/>
                            <ColumnDefinition Width="*"/>
                            <ColumnDefinition Width="*"/>
                        </Grid.ColumnDefinitions>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="*"/>
                            <RowDefinition Height="*"/>
                            <RowDefinition Height="*"/>
                            <RowDefinition Height="*"/>
                            <RowDefinition Height="*"/>
                            <RowDefinition Height="*"/>
                            <RowDefinition Height="*"/>
                            <RowDefinition Height="*"/>
                            <RowDefinition Height="*"/>
                            <RowDefinition Height="*"/>
                            <RowDefinition Height="*"/>
                        </Grid.RowDefinitions>

                        <GroupBox Header="Watchlist"  Grid.ColumnSpan="12" Grid.Row="7" Grid.RowSpan="4">
                            <Grid>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="*"/>
                                    <ColumnDefinition Width="*"/>
                                    <ColumnDefinition Width="*"/>
                                    <ColumnDefinition Width="*"/>
                                    <ColumnDefinition Width="*"/>
                                    <ColumnDefinition Width="*"/>
                                    <ColumnDefinition Width="*"/>
                                    <ColumnDefinition Width="*"/>
                                    <ColumnDefinition Width="*"/>
                                    <ColumnDefinition Width="*"/>
                                    <ColumnDefinition Width="*"/>
                                    <ColumnDefinition Width="*"/>
                                </Grid.ColumnDefinitions>
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="*"/>
                                    <RowDefinition Height="*"/>
                                    <RowDefinition Height="*"/>
                                    <RowDefinition Height="*"/>

                                </Grid.RowDefinitions>

                                <Button x:Name="btnClearWatchlist" Click="btnClearWatchlist_Click" Grid.ColumnSpan="2" Grid.Column="10" Margin="2,2,2,2" Content="{iconPacks:MaterialDesign DeleteSweep}"/>
                                <Button x:Name="btnRemoveWatchlistItem" Click="btnRemoveWatchlistItem_Click"  Grid.Column="10" Grid.Row="1" Grid.ColumnSpan="2" Margin="2,2,2,2" Content="{iconPacks:MaterialDesign DeleteForever}"/>
                                <Button x:Name="btnResume" Click="btnRemoveWatchlistItem_Click" Grid.Column="10" Grid.Row="2" Grid.ColumnSpan="2" Margin="2,2,2,2" Content="{iconPacks:MaterialDesign PlayArrow}"/>
                                <Button x:Name="btnPause"  Grid.Column="10" Grid.Row="3" Grid.ColumnSpan="2" Margin="2,2,2,2" Content="{iconPacks:MaterialDesign Pause}"/>
                                <ListView x:Name="ListViewSymbolsWatchlist" Grid.ColumnSpan="10" Grid.RowSpan="4">
                                    <ListView.View>

                                        <GridView AllowsColumnReorder="true" ColumnHeaderToolTip="Symbol Watchlist">
                                            <GridViewColumn DisplayMemberBinding="{Binding symbolHandle}" Header="Handle" Width="50"/>
                                            <GridViewColumn DisplayMemberBinding="{Binding symbolPath}" Header="Symbol" Width="250"/>
                                            <GridViewColumn DisplayMemberBinding="{Binding symbolDataType}" Header="Data Type" Width="100"/>
                                            <GridViewColumn DisplayMemberBinding="{Binding symbolValue}" Header="Value" Width="100"/>
                                            <GridViewColumn DisplayMemberBinding="{Binding symbolUpdateTime}" Header="Update Time" Width="150"/>
                                        </GridView>

                                    </ListView.View>
                                </ListView>


                            </Grid>
                        </GroupBox>
                        <GroupBox Header="Symbols" Grid.Column="0" Grid.Row="0" Grid.ColumnSpan="9" Grid.RowSpan="7">
                            <Grid>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="*"/>
                                    <ColumnDefinition Width="*"/>
                                    <ColumnDefinition Width="*"/>
                                    <ColumnDefinition Width="*"/>
                                    <ColumnDefinition Width="*"/>
                                    <ColumnDefinition Width="*"/>
                                    <ColumnDefinition Width="*"/>
                                    <ColumnDefinition Width="*"/>
                                </Grid.ColumnDefinitions>
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="*"/>
                                    <RowDefinition Height="*"/>
                                    <RowDefinition Height="*"/>
                                    <RowDefinition Height="*"/>
                                    <RowDefinition Height="*"/>

                                </Grid.RowDefinitions>
                                <TreeView x:Name="treeViewSymbols" Grid.ColumnSpan="6" Grid.RowSpan="4"  SelectedItemChanged="treeViewSymbols_SelectedItemChanged"/>
                                <Button Content="Reload" Grid.Column="6" Grid.ColumnSpan="2" Grid.Row="0" Margin="5,5,5,5"/>
                                <Button x:Name="btnLog" Content="LogList" Grid.Column="7" Grid.Row="5" Click="btnLog_Click"/>
                                <Button x:Name="btnAddNotify" Content="Notify +" Grid.Column="6" Grid.Row="3"  Click="btnAddNotify_Click"/>
                                <Button x:Name="btnNotifySubtract" Content="Notify -" Grid.Column="7" Grid.Row="3" Click="btnNotifySubtract_Click"/>
                                <Button x:Name="btnConnectPLC" Content="Connect" Grid.Row="2" Grid.Column="6" Click="btnConnectPLC_Click"/>
                                <Button x:Name="BtnLoad" Content="Load Symbols" Grid.Column="7" Grid.Row="2" Click="BtnLoad_Click" />
                                <Button Content="LogDebug" Grid.Column="6" Grid.Row="5" Click="Button_Click" />
                            </Grid>
                        </GroupBox>
                        <GroupBox Grid.Column="9" Header="Symbol" Grid.Row="0" Grid.ColumnSpan="3" Grid.RowSpan="7">
                            <Grid>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="*"/>
                                    <ColumnDefinition Width="*"/>
                                    <ColumnDefinition Width="*"/>
                                    <ColumnDefinition Width="*"/>
                                    <ColumnDefinition Width="*"/>
                                    <ColumnDefinition Width="*"/>
                                </Grid.ColumnDefinitions>
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="*"/>
                                    <RowDefinition Height="*"/>
                                    <RowDefinition Height="*"/>
                                    <RowDefinition Height="*"/>
                                    <RowDefinition Height="*"/>
                                    <RowDefinition Height="*"/>
                                    <RowDefinition Height="*"/>
                                    <RowDefinition Height="*"/>
                                    <RowDefinition Height="*"/>
                                    <RowDefinition Height="*"/>
                                </Grid.RowDefinitions>
                                <TextBlock Grid.Row="0" Grid.Column="0" Grid.ColumnSpan="2" Text="Name: " HorizontalAlignment="Right" VerticalAlignment="Center"/>
                                <TextBox Grid.Row="0" Grid.Column="2" Grid.ColumnSpan="4" IsEnabled="False"/>
                                <TextBlock Grid.Row="1" Grid.Column="0" Grid.ColumnSpan="2" Text="Group: " HorizontalAlignment="Right" VerticalAlignment="Center"/>
                                <TextBox Grid.Row="1" Grid.Column="2" Grid.ColumnSpan="4" IsEnabled="False"/>
                                <TextBlock Grid.Row="2" Grid.Column="0" Grid.ColumnSpan="2" Text="Offset: " HorizontalAlignment="Right" VerticalAlignment="Center"/>
                                <TextBox Grid.Row="2" Grid.Column="2" Grid.ColumnSpan="4" IsEnabled="False"/>
                                <TextBlock Grid.Row="3" Grid.Column="0" Grid.ColumnSpan="2" Text="Size: " HorizontalAlignment="Right" VerticalAlignment="Center"/>
                                <TextBox Grid.Row="3" Grid.Column="2" Grid.ColumnSpan="4" IsEnabled="False"/>
                                <TextBlock Grid.Row="4" Grid.Column="0" Grid.ColumnSpan="2" Text="Datatype: " HorizontalAlignment="Right" VerticalAlignment="Center"/>
                                <TextBox Grid.Row="4" Grid.Column="2" Grid.ColumnSpan="4" IsEnabled="False"/>
                                <TextBlock Grid.Row="5" Grid.Column="0" Grid.ColumnSpan="2" Text="Datatype ID: " HorizontalAlignment="Right" VerticalAlignment="Center"/>
                                <TextBox Grid.Row="5" Grid.Column="2" Grid.ColumnSpan="4" IsEnabled="False"/>
                                <TextBlock Grid.Row="6" Grid.Column="0" Grid.ColumnSpan="2" Text="Persistent: " HorizontalAlignment="Right" VerticalAlignment="Center"/>
                                <TextBox Grid.Row="6" Grid.Column="2" Grid.ColumnSpan="4" IsEnabled="False"/>
                                <TextBlock Grid.Row="7" Grid.Column="0" Grid.ColumnSpan="2" Text="Comment: " HorizontalAlignment="Right" VerticalAlignment="Center"/>
                                <TextBox Grid.Row="7" Grid.Column="2" Grid.ColumnSpan="4" IsEnabled="False"/>
                                <TextBlock Grid.Row="8" Grid.Column="0" Grid.ColumnSpan="2" Text="Value: " HorizontalAlignment="Right" VerticalAlignment="Center"/>
                                <TextBox Grid.Row="8" Grid.Column="2" Grid.ColumnSpan="4" IsEnabled="False"/>
                                <Button x:Name="btnAddToWatchlist" Content="Add to Watchlist" Grid.Row="9" Grid.ColumnSpan="3" IsEnabled="False" Click="btnAddToWatchlist_Click" Margin="1,1,1,1"/>
                                <Button x:Name="btnWriteSymbol" Content="Write Symbol" Grid.Column="3" Grid.Row="9" Grid.ColumnSpan="3" IsEnabled="False" Margin="1,1,1,1"/>
                            </Grid>

                        </GroupBox>

                    </Grid>
                </TabItem>
                <TabItem Header="TwinSAFE" IsEnabled="False">
                    <Grid Background="#FFE5E5E5"/>
                </TabItem>
                <TabItem Header="Settings">
                    <Grid Background="#FFE5E5E5">
                        <GroupBox Header="Symbol Settings" Margin="10,32,541,0">
                            <StackPanel>
                                <StackPanel Height="100">
                                    <CheckBox Content="Load TwinCAT System Symbol Lists"/>
                                    <CheckBox Content="CheckBox"/>
                                    <CheckBox Content="CheckBox"/>
                                    <CheckBox Content="CheckBox"/>
                                </StackPanel>
                            </StackPanel>





                        </GroupBox>
                    </Grid>
                </TabItem>
            </TabControl>

        </DockPanel>

    </Grid>
</Window>
